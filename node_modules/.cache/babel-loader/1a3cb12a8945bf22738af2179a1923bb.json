{"ast":null,"code":"var _jsxFileName = \"/Users/aromero32/Desktop/pretest/src/components/wordComponent/view.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { MediaComponentLayout } from './mediaComponet/layout';\nimport { wordList } from '../../wordList';\nimport { WhiteTextField } from '../../assets/inputTypes/inputTypes';\nimport Button from '@material-ui/core/Button';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { defaultTheme } from \"../../assets/inputTypes/themes.js\";\nimport { validateAlpha } from '../../utils/validations';\nimport Sound from 'react-sound';\n\nclass WordComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.images = this.importAll(require.context('../../../assets/images/wordImages', false, /\\.(jpe?g)$/));\n    this.sounds = this.importAll(require.context('../../../assets/audioFiles/pretest_talker', false, /\\.wav$/));\n    this.state = {\n      currentWord: 0,\n      isDisabled: false,\n      typedAnswer: '',\n      playingStatus: Sound.status.PLAYING\n    };\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      typedAnswer: event.target.value\n    });\n  }\n\n  handleEnter(event) {\n    const errors = validateAlpha(this.state.typedAnswer);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n    if (event.key === 'Enter' && isDisabled) {\n      this.setState({\n        typedAnswer: event.target.value,\n        currentWord: this.state.currentWord + 1\n      }); //save the spelling\n    }\n  }\n\n  handleButtonClick() {//save the spelling\n  }\n\n  importAll(r) {\n    let images = {}; // eslint-disable-next-line array-callback-return\n\n    r.keys().map((item, index) => {\n      images[item.replace('', '')] = r(item);\n    });\n    return images;\n  }\n\n  handleFinishPlaying() {\n    const updateWordFinished = this.props.updateWordFinished;\n    this.setState({\n      playingStatus: Sound.status.STOPPED\n    });\n    updateWordFinished(true);\n  }\n\n  render() {\n    const _this$state = this.state,\n          currentWord = _this$state.currentWord,\n          typedAnswer = _this$state.typedAnswer,\n          playingStatus = _this$state.playingStatus;\n    const wordFinished = this.props.wordFinished;\n    const errors = validateAlpha(this.state.typedAnswer);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.images[\"./pic_\".concat(wordList[currentWord], \".jpg\")],\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Sound, {\n      url: this.sounds[\"./pretest_talker_\".concat(wordList[currentWord], \".wav\")],\n      playStatus: playingStatus,\n      onFinishedPlaying: this.handleFinishPlaying.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"name-input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(WhiteTextField, {\n      id: \"name-input\",\n      value: typedAnswer,\n      fullWidth: true,\n      label: \"Name\",\n      variant: \"outlined\",\n      disabled: !wordFinished,\n      onChange: this.handleNameChange.bind(this),\n      onKeyPress: this.handleEnter.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(ThemeProvider, {\n      theme: defaultTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      disabled: !isDisabled,\n      onClick: this.handleButtonClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Continue\")));\n  }\n\n}\n\nexport const WordComponentView = withRouter(WordComponent);","map":{"version":3,"sources":["/Users/aromero32/Desktop/pretest/src/components/wordComponent/view.js"],"names":["React","withRouter","MediaComponentLayout","wordList","WhiteTextField","Button","ThemeProvider","defaultTheme","validateAlpha","Sound","WordComponent","Component","constructor","props","images","importAll","require","context","sounds","state","currentWord","isDisabled","typedAnswer","playingStatus","status","PLAYING","handleNameChange","event","setState","target","value","handleEnter","errors","Object","keys","some","x","key","handleButtonClick","r","map","item","index","replace","handleFinishPlaying","updateWordFinished","STOPPED","render","wordFinished","bind","WordComponentView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router';\nimport {MediaComponentLayout} from './mediaComponet/layout';\nimport {wordList} from '../../wordList';\nimport { WhiteTextField } from '../../assets/inputTypes/inputTypes'\nimport Button from '@material-ui/core/Button';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { defaultTheme } from \"../../assets/inputTypes/themes.js\";\nimport { validateAlpha } from '../../utils/validations';\nimport Sound from 'react-sound';\n\nclass WordComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.images = this.importAll(require.context('../../../assets/images/wordImages', false, /\\.(jpe?g)$/));\n        this.sounds = this.importAll(require.context('../../../assets/audioFiles/pretest_talker', false, /\\.wav$/));\n        this.state = {currentWord: 0, isDisabled: false, typedAnswer: '', playingStatus: Sound.status.PLAYING }\n    }\n    \n\n\n    handleNameChange(event) {\n        this.setState({ typedAnswer: event.target.value });\n    };\n\n    handleEnter(event) {\n        const errors = validateAlpha(this.state.typedAnswer);\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n        if (event.key === 'Enter' && isDisabled) {\n            this.setState({ typedAnswer: event.target.value, currentWord: this.state.currentWord + 1 });\n            //save the spelling\n        }\n    }\n\n    handleButtonClick() {\n        //save the spelling\n    }\n    \n    importAll(r) {\n        let images = {};\n        // eslint-disable-next-line array-callback-return\n        r.keys().map((item, index) => {images[item.replace('','')] = r(item) });\n        return images;\n    }\n\n    handleFinishPlaying(){\n        const {updateWordFinished} = this.props;\n        this.setState({ playingStatus: Sound.status.STOPPED });\n        updateWordFinished(true);\n    }\n\n    render() {\n        const {currentWord, typedAnswer, playingStatus} = this.state;\n        const {wordFinished} = this.props;\n\n        const errors = validateAlpha(this.state.typedAnswer);\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n        return (\n            <div>\n                <div>\n                    <img src={this.images[`./pic_${wordList[currentWord]}.jpg`]} alt='' />\n                    <Sound\n                        url={this.sounds[`./pretest_talker_${wordList[currentWord]}.wav`]}\n                        playStatus={playingStatus}\n                        onFinishedPlaying={this.handleFinishPlaying.bind(this)}\n                    />\n                </div>\n                <div className='name-input-container'>\n                        <WhiteTextField id=\"name-input\" value={typedAnswer}\n                        fullWidth label=\"Name\" variant=\"outlined\" disabled={!wordFinished}\n                        onChange={this.handleNameChange.bind(this)} onKeyPress={this.handleEnter.bind(this)}/>\n                    </div>\n                \n                    <ThemeProvider theme={defaultTheme}>\n                        <Button variant=\"contained\" color=\"primary\"\n                        size='large' disabled={!isDisabled}\n                        onClick={this.handleButtonClick.bind(this)}>\n                            Continue\n                        </Button>\n                </ThemeProvider>\n            </div>\n        );\n    }\n}\n\nexport const WordComponentView = withRouter(WordComponent);"]},"metadata":{},"sourceType":"module"}