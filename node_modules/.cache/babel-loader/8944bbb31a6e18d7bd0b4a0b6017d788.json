{"ast":null,"code":"import _defineProperty from\"/Users/aromero32/Desktop/pretest/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import initalState from'../initalState';import actionTypes from'../actionTypes';export var userReducer=function userReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initalState.user;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.UPDATE_NAME:{return _objectSpread({},state,{name:action.name});}default:return state;}};","map":{"version":3,"sources":["/Users/aromero32/Desktop/pretest/src/reducers/userReducer.js"],"names":["initalState","actionTypes","userReducer","state","user","action","type","UPDATE_NAME","name"],"mappings":"i4BAAC,MAAOA,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAsC,IAArCC,CAAAA,KAAqC,2DAA7BH,WAAW,CAACI,IAAiB,IAAXC,CAAAA,MAAW,2CAC7D,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKL,CAAAA,WAAW,CAACM,WAAjB,CAA8B,CAC1B,wBAAWJ,KAAX,EAAkBK,IAAI,CAAEH,MAAM,CAACG,IAA/B,GACH,CACD,QACG,MAAOL,CAAAA,KAAP,CALP,CAOH,CARM","sourcesContent":[" import initalState from '../initalState'\n import actionTypes from '../actionTypes'\n\n export const userReducer = (state = initalState.user, action) => {\n     switch (action.type) {\n         case actionTypes.UPDATE_NAME: {\n             return {...state, name: action.name};\n         }\n         default:\n            return state\n     }\n }"]},"metadata":{},"sourceType":"module"}