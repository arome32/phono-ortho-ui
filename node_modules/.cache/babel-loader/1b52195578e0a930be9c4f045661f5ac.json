{"ast":null,"code":"import * as actionTypes from \"../actionTypes\";\nimport { User } from \"../models/user\";\nimport { Word } from \"../models/word\";\nexport const createUser = name => dispatch => {\n  const user = new User(name);\n  dispatch({\n    type: actionTypes.CREATE_USER,\n    user\n  }).then({\n    type: actionTypes.SEND_NAME,\n    name\n  });\n};\nexport const pushWord = (word, spelling) => dispatch => {\n  const wordToAdd = new Word(word, spelling);\n  dispatch({\n    type: actionTypes.PUSH_WORD,\n    word: wordToAdd\n  });\n};\nexport const postUser = () => dispatch => {\n  dispatch({\n    type: actionTypes.POST_USER\n  });\n};","map":{"version":3,"sources":["/Users/aromero32/Desktop/workshop/phono-ortho-ui/src/actionCreators/userActionCreator.js"],"names":["actionTypes","User","Word","createUser","name","dispatch","user","type","CREATE_USER","then","SEND_NAME","pushWord","word","spelling","wordToAdd","PUSH_WORD","postUser","POST_USER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,IAAT,QAAqB,gBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,IAAI,IAAKC,QAAD,IAAc;AAC5C,QAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASG,IAAT,CAAb;AACAC,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEP,WAAW,CAACQ,WAAnB;AAAgCF,IAAAA;AAAhC,GAAD,CAAR,CACCG,IADD,CACM;AAACF,IAAAA,IAAI,EAAEP,WAAW,CAACU,SAAnB;AAA8BN,IAAAA;AAA9B,GADN;AAEH,CAJM;AAMP,OAAO,MAAMO,QAAQ,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAqBR,QAAD,IAAc;AACtD,QAAMS,SAAS,GAAG,IAAIZ,IAAJ,CAASU,IAAT,EAAeC,QAAf,CAAlB;AACAR,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEP,WAAW,CAACe,SAAnB;AAA8BH,IAAAA,IAAI,EAAEE;AAApC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAME,QAAQ,GAAG,MAAOX,QAAD,IAAc;AACxCA,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEP,WAAW,CAACiB;AAAnB,GAAD,CAAR;AACH,CAFM","sourcesContent":["import * as actionTypes from  \"../actionTypes\";\nimport { User } from \"../models/user\";\nimport { Word } from \"../models/word\";\n\nexport const createUser = name => (dispatch) => {\n    const user = new User(name);\n    dispatch({type: actionTypes.CREATE_USER, user})\n    .then({type: actionTypes.SEND_NAME, name})\n}\n\nexport const pushWord = (word, spelling) => (dispatch) => {\n    const wordToAdd = new Word(word, spelling);\n    dispatch({type: actionTypes.PUSH_WORD, word: wordToAdd});\n}\n\nexport const postUser = () => (dispatch) => {\n    dispatch({type: actionTypes.POST_USER});\n}"]},"metadata":{},"sourceType":"module"}