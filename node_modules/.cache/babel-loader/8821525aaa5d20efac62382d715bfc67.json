{"ast":null,"code":"import _defineProperty from \"/Users/aromero32/Desktop/pretest/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport initalState from '../initalState';\nimport actionTypes from '../actionTypes';\nexport const userReducer = (state = initalState.user, action) => {\n  switch (action.type) {\n    case actionTypes.UPDATE_NAME:\n      {\n        console.log(action);\n        return _objectSpread({}, state, {\n          name: action.name\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/aromero32/Desktop/pretest/src/reducers/userReducer.js"],"names":["initalState","actionTypes","userReducer","state","user","action","type","UPDATE_NAME","console","log","name"],"mappings":";;;;;;AAAC,OAAOA,WAAP,MAAwB,gBAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,WAAW,CAACI,IAArB,EAA2BC,MAA3B,KAAsC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,WAAW,CAACM,WAAjB;AAA8B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,iCAAWF,KAAX;AAAkBO,UAAAA,IAAI,EAAEL,MAAM,CAACK;AAA/B;AACH;;AACD;AACG,aAAOP,KAAP;AANP;AAQH,CATM","sourcesContent":[" import initalState from '../initalState'\n import actionTypes from '../actionTypes'\n\n export const userReducer = (state = initalState.user, action) => {\n     switch (action.type) {\n         case actionTypes.UPDATE_NAME: {\n             console.log(action);\n             return {...state, name: action.name};\n         }\n         default:\n            return state\n     }\n }"]},"metadata":{},"sourceType":"module"}