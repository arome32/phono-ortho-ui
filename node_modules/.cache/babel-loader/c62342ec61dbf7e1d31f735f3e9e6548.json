{"ast":null,"code":"var _jsxFileName = \"/Users/aromero32/Desktop/pretest/src/components/wordComponent/view.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { wordList } from '../../wordList';\nimport { WhiteTextField } from '../../assets/inputTypes/inputTypes';\nimport Button from '@material-ui/core/Button';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { defaultTheme } from \"../../assets/inputTypes/themes.js\";\nimport { validateAlpha } from '../../utils/validations';\nimport Sound from 'react-sound';\n\nclass WordComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.images = this.importAll(require.context('../../assets/images/wordImages', false, /\\.(jpe?g)$/));\n    this.sounds = this.importAll(require.context('../../assets/audioFiles/pretest_talker', false, /\\.wav$/));\n    this.state = {\n      currentWord: 0,\n      typedAnswer: '',\n      playingStatus: Sound.status.PLAYING\n    };\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      typedAnswer: event.target.value\n    });\n  }\n\n  handleEnter(event) {\n    const _this$state = this.state,\n          currentWord = _this$state.currentWord,\n          typedAnswer = _this$state.typedAnswer;\n    const errors = validateAlpha(typedAnswer);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n    if (event.key === 'Enter' && isDisabled) {\n      this.props.pushWord(wordList[currentWord], typedAnswer);\n      this.setState({\n        typedAnswer: '',\n        currentWord: currentWord + 1,\n        playingStatus: Sound.status.PLAYING\n      });\n    }\n  }\n\n  handleButtonClick() {\n    const _this$state2 = this.state,\n          currentWord = _this$state2.currentWord,\n          typedAnswer = _this$state2.typedAnswer;\n    this.props.pushWord(wordList[currentWord], typedAnswer);\n    this.setState({\n      typedAnswer: '',\n      playingStatus: Sound.status.PLAYING,\n      currentWord: this.state.currentWord + 1\n    });\n  }\n\n  importAll(r) {\n    let images = {}; // eslint-disable-next-line array-callback-return\n\n    r.keys().map((item, index) => {\n      images[item.replace('', '')] = r(item);\n    });\n    return images;\n  }\n\n  handleFinishPlaying() {\n    this.setState({\n      playingStatus: Sound.status.STOPPED\n    });\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          currentWord = _this$state3.currentWord,\n          typedAnswer = _this$state3.typedAnswer,\n          playingStatus = _this$state3.playingStatus;\n    const errors = validateAlpha(this.state.typedAnswer);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.images[\"./pic_\".concat(wordList[currentWord], \".jpg\")],\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Sound, {\n      url: this.sounds[\"./pretest_talker_\".concat(wordList[currentWord], \".wav\")],\n      playStatus: playingStatus,\n      onFinishedPlaying: this.handleFinishPlaying.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"name-input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(WhiteTextField, {\n      id: \"name-input\",\n      value: typedAnswer,\n      autoComplete: \"off\",\n      autoFocus: true,\n      fullWidth: true,\n      label: \"Name\",\n      variant: \"outlined\",\n      spellCheck: false,\n      onChange: this.handleNameChange.bind(this),\n      onKeyPress: this.handleEnter.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(ThemeProvider, {\n      theme: defaultTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      disabled: !isDisabled,\n      onClick: this.handleButtonClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Continue\")));\n  }\n\n}\n\nexport const WordComponentView = withRouter(WordComponent);","map":{"version":3,"sources":["/Users/aromero32/Desktop/pretest/src/components/wordComponent/view.js"],"names":["React","withRouter","wordList","WhiteTextField","Button","ThemeProvider","defaultTheme","validateAlpha","Sound","WordComponent","Component","constructor","props","images","importAll","require","context","sounds","state","currentWord","typedAnswer","playingStatus","status","PLAYING","handleNameChange","event","setState","target","value","handleEnter","errors","isDisabled","Object","keys","some","x","key","pushWord","handleButtonClick","r","map","item","index","replace","handleFinishPlaying","STOPPED","render","bind","WordComponentView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router';\nimport {wordList} from '../../wordList';\nimport { WhiteTextField } from '../../assets/inputTypes/inputTypes'\nimport Button from '@material-ui/core/Button';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { defaultTheme } from \"../../assets/inputTypes/themes.js\";\nimport { validateAlpha } from '../../utils/validations';\nimport Sound from 'react-sound';\n\nclass WordComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.images = this.importAll(require.context('../../assets/images/wordImages', false, /\\.(jpe?g)$/));\n        this.sounds = this.importAll(require.context('../../assets/audioFiles/pretest_talker', false, /\\.wav$/));\n        this.state = {currentWord: 0, typedAnswer: '', playingStatus: Sound.status.PLAYING }\n    }\n\n    handleNameChange(event) {\n        this.setState({ typedAnswer: event.target.value });\n    };\n\n    handleEnter(event) {\n        const {currentWord, typedAnswer} = this.state;\n        const errors = validateAlpha(typedAnswer);\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n        if (event.key === 'Enter' && isDisabled) {\n            this.props.pushWord(wordList[currentWord], typedAnswer);\n            this.setState({ typedAnswer: '', currentWord: currentWord + 1, playingStatus: Sound.status.PLAYING });\n        }   \n    }\n\n    handleButtonClick() {\n        const {currentWord, typedAnswer} = this.state;\n        this.props.pushWord(wordList[currentWord], typedAnswer);\n        this.setState({ typedAnswer: '', playingStatus: Sound.status.PLAYING, currentWord: this.state.currentWord + 1 })\n    }\n    \n    importAll(r) {\n        let images = {};\n        // eslint-disable-next-line array-callback-return\n        r.keys().map((item, index) => {images[item.replace('','')] = r(item) });\n        return images;\n    }\n\n    handleFinishPlaying(){\n        this.setState({ playingStatus: Sound.status.STOPPED });\n    }\n\n    render() {\n        const {currentWord, typedAnswer, playingStatus} = this.state;\n\n        const errors = validateAlpha(this.state.typedAnswer);\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n        return (\n            <div>\n                <div>\n                    <img src={this.images[`./pic_${wordList[currentWord]}.jpg`]} alt='' />\n                    <Sound\n                        url={this.sounds[`./pretest_talker_${wordList[currentWord]}.wav`]}\n                        playStatus={playingStatus}\n                        onFinishedPlaying={this.handleFinishPlaying.bind(this)}\n                    />\n                </div>\n                <div className='name-input-container'>\n                        <WhiteTextField id=\"name-input\" value={typedAnswer}\n                        autoComplete='off' autoFocus={true}\n                        fullWidth label=\"Name\" variant=\"outlined\" spellCheck={false}\n                        onChange={this.handleNameChange.bind(this)} onKeyPress={this.handleEnter.bind(this)}/>\n                    </div>\n                \n                    <ThemeProvider theme={defaultTheme}>\n                        <Button variant=\"contained\" color=\"primary\"\n                        size='large' disabled={!isDisabled}\n                        onClick={this.handleButtonClick.bind(this)}>\n                            Continue\n                        </Button>\n                </ThemeProvider>\n            </div>\n        );\n    }\n}\n\nexport const WordComponentView = withRouter(WordComponent);"]},"metadata":{},"sourceType":"module"}