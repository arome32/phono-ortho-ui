{"ast":null,"code":"var _jsxFileName = \"/Users/aromero32/Desktop/pretest/src/components/wordComponent/view.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { MediaComponentLayout } from './mediaComponet/layout';\nimport { wordList } from '../../wordList';\nimport { WhiteTextField } from '../../assets/inputTypes/inputTypes';\nimport Button from '@material-ui/core/Button';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { defaultTheme } from \"../../assets/inputTypes/themes.js\";\n\nclass WordComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentWord: 0,\n      isDisabled: false,\n      typedAnswer: ''\n    };\n  }\n\n  validate(name) {\n    return {\n      name: /^([a-zA-Z ])+$/g.test(name)\n    };\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleEnter(event) {\n    const errors = this.validate(this.state.name);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n    if (event.key === 'Enter' && isDisabled) {\n      this.setState({\n        name: event.target.value\n      });\n      this.props.history.push('/introduction');\n    }\n  }\n\n  handleButtonClick() {\n    this.props.history.push('/introduction');\n  }\n\n  render() {\n    const _this$state = this.state,\n          currentWord = _this$state.currentWord,\n          isDisabled = _this$state.isDisabled,\n          typedAnswer = _this$state.typedAnswer;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(MediaComponentLayout, {\n      word: wordList[currentWord],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"name-input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(WhiteTextField, {\n      id: \"name-input\",\n      value: typedAnswer,\n      fullWidth: true,\n      label: \"Name\",\n      variant: \"outlined\",\n      onChange: this.handleNameChange.bind(this),\n      onKeyPress: this.handleEnter.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(ThemeProvider, {\n      theme: defaultTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      disabled: !isDisabled,\n      onClick: this.handleButtonClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Continue\")));\n  }\n\n}\n\nexport const WordComponentView = withRouter(WordComponent);","map":{"version":3,"sources":["/Users/aromero32/Desktop/pretest/src/components/wordComponent/view.js"],"names":["React","withRouter","MediaComponentLayout","wordList","WhiteTextField","Button","ThemeProvider","defaultTheme","WordComponent","Component","constructor","props","state","currentWord","isDisabled","typedAnswer","validate","name","test","handleNameChange","event","setState","target","value","handleEnter","errors","Object","keys","some","x","key","history","push","handleButtonClick","render","bind","WordComponentView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router';\nimport {MediaComponentLayout} from './mediaComponet/layout';\nimport {wordList} from '../../wordList';\nimport { WhiteTextField } from '../../assets/inputTypes/inputTypes'\nimport Button from '@material-ui/core/Button';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { defaultTheme } from \"../../assets/inputTypes/themes.js\";\n\n\nclass WordComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {currentWord: 0, isDisabled: false, typedAnswer: ''}\n    }\n    \n    validate(name) {\n        return {\n          name: /^([a-zA-Z ])+$/g.test(name),\n        };\n      }\n\n    handleNameChange(event) {\n        this.setState({ name: event.target.value });\n    };\n\n    handleEnter(event) {\n        const errors = this.validate(this.state.name);\n        const isDisabled = Object.keys(errors).some(x => errors[x]);\n\n        if (event.key === 'Enter' && isDisabled) {\n            this.setState({ name: event.target.value });\n            this.props.history.push('/introduction');\n        }\n    }\n\n    handleButtonClick() {\n        this.props.history.push('/introduction');\n    }\n\n    render() {\n        const {currentWord, isDisabled, typedAnswer} = this.state;\n        return (\n            <div>\n                <MediaComponentLayout word={wordList[currentWord]}/>\n                <div className='name-input-container'>\n                        <WhiteTextField id=\"name-input\" value={typedAnswer}\n                        fullWidth label=\"Name\" variant=\"outlined\" \n                        onChange={this.handleNameChange.bind(this)} onKeyPress={this.handleEnter.bind(this)}/>\n                    </div>\n                \n                    <ThemeProvider theme={defaultTheme}>\n                        <Button variant=\"contained\" color=\"primary\"\n                        size='large' disabled={!isDisabled}\n                        onClick={this.handleButtonClick.bind(this)}>\n                            Continue\n                        </Button>\n                </ThemeProvider>\n            </div>\n        );\n    }\n}\n\nexport const WordComponentView = withRouter(WordComponent);"]},"metadata":{},"sourceType":"module"}